#!/usr/bin/env ruby
require 'yaml'
require_relative '../lib/sweatshop/queue-helper'
require_relative '../lib/sweatshop/config'

def find_job_config_file(job_name)
  configurations = [
    "#{__dir__}/../../jobs",
    configatron.job_directory
  ]
  configurations.each do |config_path|
    file_path = "#{config_path}/#{job_name}.yaml"
    puts file_path
    return file_path if File.file? file_path
  end
  nil
end

def load_config(for_job_name:)
  job_config_path = find_job_config_file for_job_name
  if job_config_path.nil?
    puts "No config found for job '#{for_job_name}'"
    return nil
  end
  YAML.load_file job_config_path
end

def serialize(value)
  value.is_a?(Hash) ? JSON.generate(value) : value.to_s
end

def assemble_job(data)
  job_config = load_config for_job_name: data['job_name']
  return nil unless job_config
  if job_config['branch_whitelist'].include? data['payload']['branch']
    context = job_config['environment'].merge(data['payload'])
    context.each { |key, value| context[key] = serialize value }
    {
      commands: job_config['commands'],
      context: context,
      job_name: data['job_name']
    }
  else
    puts "Branch '#{data['payload']['branch']}' is not whitelisted"
    nil
  end
end

QueueHelper.wait_for('parsed-payload') do |data|
  puts "Assembling: #{data}"
  assembled_job = assemble_job data
  QueueHelper.enqueue assembled_job, to: 'jobs' if assembled_job
end

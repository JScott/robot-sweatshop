#!/usr/bin/env ruby
require 'yaml'
require_relative '../lib/sweatshop/queue-helper'
require_relative '../lib/sweatshop/config'

def load_config(for_job:)
  job_directory = File.expand_path configatron.job_directory
  file_path = "#{job_directory}/#{for_job}.yaml"
  puts file_path
  if File.file?(file_path)
    YAML.load_file file_path
  else
    puts "No config found for job '#{for_job}'"
    nil
  end
end

def serialize(value)
  value.is_a?(Hash) ? JSON.generate(value) : value.to_s
end

def assemble_job(data)
  job_config = load_config for_job: data['job_name']
  return nil if job_config.nil?
  if job_config['branch_whitelist'].include? data['payload']['branch']
    context = job_config['environment'].merge(data['payload'])
    context.each { |key, value| context[key] = serialize value }
    {
      commands: job_config['commands'],
      context: context,
      job_name: data['job_name']
    }
  else
    puts "Branch '#{data['payload']['branch']}' is not whitelisted"
    nil
  end
end

QueueHelper.wait_for('parsed-payload') do |data|
  puts "Assembling: #{data}"
  assembled_job = assemble_job data
  QueueHelper.enqueue assembled_job, to: 'jobs' if assembled_job
  $stdout.flush
  $stderr.flush
end

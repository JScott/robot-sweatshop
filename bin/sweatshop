#!/usr/bin/env ruby
require 'configatron'
require 'yaml'
require 'commander/import'
require 'colorize'
require_relative 'lib/common'
require_relative 'lib/job'
require_relative 'lib/inspect'
require_relative 'lib/start'

# :name is optional, otherwise uses the basename of this executable
program :name, 'Robot Sweatshop'
program :version, '0.1.0'
program :description, 'A lightweight, unopinionated CI server'
program :help, 'Author', 'Justin Scott <jvscott@gmail.com>'

# default_command :bootstrap

command :job do |c|
  c.syntax = 'sweatshop job <name>'
  c.description = 'Creates and edits jobs'
  c.action do |args|
    with_job_file for_job: args.first do |file|
      create_and_edit job_file: file
    end
  end
end

command :inspect do |c|
  c.syntax = 'sweatshop inspect <name>'
  c.description = 'Verify the structure of a job'
  c.action do |args|
    with_job_file for_job: args.first do |file|
      validate job_file: file
    end
  end
end

command :start do |c|
  c.syntax = 'sweatshop start [options]'
  c.description = 'Start the Sweatshop'
  c.option '--testing', 'Load the testing Eye configuration.'
  #c.option '--config STRING', String, 'Specify a custom Robot Sweatshop configuration.'
  c.action do |args, options|
    options.default :testing => false
    #options.default :config => ''
    environment = options.testing ? 'testing' : 'production'
    #load_custom_config options.config unless options.config.empty?
    start_sweatshop for_environment: environment
  end
end

command :stop do |c|
  c.syntax = 'sweatshop stop'
  c.description = 'Stop the Sweatshop'
  c.action do
    notify :info, `eye stop robot_sweatshop`
  end
end

# command :bar do |c|
#   c.syntax = 'foobar bar [options]'
#   c.description = 'Display bar with optional prefix and suffix'
#   c.option '--prefix STRING', String, 'Adds a prefix to bar'
#   c.option '--suffix STRING', String, 'Adds a suffix to bar'
#   c.action do |args, options|
#     options.default :prefix => '(', :suffix => ')'
#     say "#{options.prefix}bar#{options.suffix}"
#   end
# end

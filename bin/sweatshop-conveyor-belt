#!/usr/bin/env ruby
require 'bundler/setup'
require 'ezmq'
require 'stubborn_queue'
require 'oj'
require 'contracts'
require 'robot_sweatshop/config'

@items = StubbornQueue.new name: 'test', timeout: configatron.job_timeout_length
$stdout.sync = true
include Contracts

Contract Hash => String
def enqueue(item)
  puts "enqueue #{item}"
  @items.enqueue item
end

def dequeue
  puts "dequeue"
  @items.dequeue
end

def lookup(id)
end

puts 'Starting Conveyor Belt'
server_settings = {
  port: configatron.conveyor_belt_port,
  encode: -> message { Oj.dump message },
  decode: -> message { Oj.load message }
}
server = EZMQ::Server.new server_settings
server.listen do |request|
  puts request
  case request['method']
  when 'enqueue'
    enqueue request['item']
  when 'dequeue'
    dequeue
  when 'lookup'
    lookup request['id']
  else
    ''
  end
end
